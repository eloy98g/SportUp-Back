-- eliminar ni existe
DROP DATABASE IF EXISTS sportupDB;

-- Creacion de la base de datos
CREATE DATABASE sportupDB;

-- usar
USE sportupDB;

CREATE TABLE USER (
    gid TEXT PRIMARY KEY,
    name TEXT,
    email TEXT,
    phone INTEGER,
    image BLOB,
    description TEXT,
    birthdate INTEGER,
    creationDate INTEGER,
    phoneVerified BOOLEAN,
    emailVerified BOOLEAN,
    gender TEXT,
    locationId INTEGER,
    FOREIGN KEY (gender) REFERENCES gender(gid),
    FOREIGN KEY (locationId) REFERENCES location(gid)
);

CREATE TABLE LOCATION (
    gid TEXT PRIMARY KEY,
    latitude REAL,
    longitude REAL,
    latitudeDelta REAL,
    longitudeDelta REAL,
    radius REAL
);

CREATE TABLE SPORT (
    gid TEXT PRIMARY KEY,
    image BLOB,
    name TEXT,
    icon TEXT,
    slots INTEGER NOT NULL
);

CREATE TABLE CHAT (
    gid TEXT PRIMARY KEY,
    activityId TEXT,
    name TEXT,
    dateStart INTEGER,
    image BLOB,
    FOREIGN KEY (activityId) REFERENCES activity(gid)
);

CREATE TABLE MESSAGE (
    gid TEXT PRIMARY KEY,
    chatId TEXT,
    sender TEXT,
    date INTEGER,
    content TEXT,
    FOREIGN KEY (chatId) REFERENCES chat(gid),
    FOREIGN KEY (sender) REFERENCES user(gid)
);

CREATE TABLE ACTIVITY (
    gid TEXT PRIMARY KEY,
    admin TEXT,
    locationId INTEGER,
    creationDate INTEGER,
    dateStart INTEGER,
    duration INTEGER,
    price REAL,
    visibility TEXT,
    type TEXT,
    access TEXT,
    name TEXT,
    sport TEXT,
    description TEXT,
    playersPerTeam INTEGER,
    chat TEXT,
    status TEXT,
    teams TEXT,
    FOREIGN KEY (admin) REFERENCES user(gid),
    FOREIGN KEY (locationId) REFERENCES location(gid),
    FOREIGN KEY (visibility) REFERENCES activity_visibility(gid),
    FOREIGN KEY (type) REFERENCES activity_type(gid),
    FOREIGN KEY (access) REFERENCES activity_access(gid),
    FOREIGN KEY (sport) REFERENCES sport(gid),
    FOREIGN KEY (chat) REFERENCES chat(gid),
    FOREIGN KEY (status) REFERENCES activity_status(gid),
    FOREIGN KEY (teams) REFERENCES teams(gid)
);

CREATE TABLE SLOT (
    gid TEXT PRIMARY KEY,
    activityId TEXT,
    team TEXT,
    points INTEGER,
    position INTEGER,
    FOREIGN KEY (activityId) REFERENCES activity(gid),
    FOREIGN KEY (team) REFERENCES team(gid)
);

CREATE TABLE TEAM (
    gid TEXT PRIMARY KEY,
    activityId TEXT,
    name TEXT,
    FOREIGN KEY (activityId) REFERENCES activity(gid)
);

CREATE TABLE APPLICATION (
    gid TEXT PRIMARY KEY,
    activityId TEXT,
    userGid TEXT,
    creationDate INTEGER,
    status TEXT,
    FOREIGN KEY (activityId) REFERENCES activity(gid),
    FOREIGN KEY (userGid) REFERENCES user(gid),
    FOREIGN KEY (status) REFERENCES application_status(gid)
);

CREATE TABLE REVIEW (
    gid TEXT PRIMARY KEY,
    activityId TEXT,
    reviewer TEXT,
    rating INTEGER,
    comment TEXT,
    reviewed TEXT,
    FOREIGN KEY (activityId) REFERENCES activity(gid),
    FOREIGN KEY (reviewer) REFERENCES user(gid),
    FOREIGN KEY (reviewed) REFERENCES user(gid)
);

CREATE TABLE SPORT_FAVORITE (
    userGid TEXT,
    sportGid TEXT,
    PRIMARY KEY (userGid, sportGid),
    FOREIGN KEY (userGid) REFERENCES user(gid),
    FOREIGN KEY (sportGid) REFERENCES sport(gid)
);

CREATE TABLE USER_TEAM (
    userGid TEXT,
    activityGid TEXT,
    team TEXT,
    PRIMARY KEY (userGid, activityGid),
    FOREIGN KEY (userGid) REFERENCES user(gid),
    FOREIGN KEY (activityGid) REFERENCES activity(gid),
    FOREIGN KEY (team) REFERENCES team(gid)
);

CREATE TABLE ACTIVITY_ACCESS (
    gid TEXT PRIMARY KEY,
    key TEXT,
    label TEXT
);

CREATE TABLE ACTIVITY_TYPE (
    gid TEXT PRIMARY KEY,
    key TEXT,
    label TEXT
);

CREATE TABLE ACTIVITY_VISIBILITY (
    gid TEXT PRIMARY KEY,
    key TEXT,
    label TEXT
);

CREATE TABLE ACTIVITY_STATUS (
    gid TEXT PRIMARY KEY,
    key TEXT,
    label TEXT
);

CREATE TABLE APPLICATION_STATUS (
    gid TEXT PRIMARY KEY,
    key TEXT,
    label TEXT
);
